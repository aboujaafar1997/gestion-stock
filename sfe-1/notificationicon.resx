<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gUJACAjFVOFAwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQiSURBVHhe
        7Zs9TxRRFIYhGGKCLdGCxtLWjoTKD6iojA0NiVR0lPwAGj5+AxU/wEghCQmFNFYkdEhhY6EJHYlioa7v
        s/seHQd2Zedjd/D6JIdlzrn3fMzOzty5d2akblqt1oRkXrIi2ZDsSA4kJ5JzC/+jw0Yb2tJnwm5uFkp8
        UvJC8kpyISkKffGBr0m7byZKcFyyLDmUfJfk+SE5kxxL9iTbkjUL/7+WYKMNbfPg842EGOMOO3yUzKhk
        QfJekudUsimZkVw7adq6D33xkYdYxBx1l+GgBGYlR5IsbK9KHrhZafBln1fFmnWzwaGgU5J9MsjwTvLM
        TWqDGI6VhVym3KReFGha8pGo5pOE3+UtN6kdYjkmsQNymnaTelCARclXoglOVOuSOzYPHGI7hzhpktui
        zdUhp2OSLSKYz5LnNg8dcnFOAbmO2VwOHEle4tV8kDy0uTGQk3MLyLn8TpCT7Df/VnLPpsZBbs4x2LKp
        GHLAbz7A8W2bGgs5Oteg2DlBHTnbxwmPQ6ux33wecnXOQA39XR3Uget8XOo4uTTuN/83yNm5A7Vcf5yg
        xjHI4fLSmLN9v5C7a4B9q3ujhgxvg3WrbyzU0CmlTe9hsxpwYxPjbUZZQxvkVAU1uBagtu43UDJyhxUs
        W33joZZOSW0WrP4TGbgFjVtabjYGNravG2pxTUCNl2/NpczupcJ3dep7X3LXm5WBT3x7s2+oSRJcPrql
        ZCYHjqzqG/Wl+G8SLj+PrC4NvuwT32V2QpzfDq3qIAVzeDGNtWp136gv31Jce79IHttUGHzYF+C78NGl
        vkyqALX+nmPUxlJb3aHUTI76821FwqV2An3tA/gsdVSpPzNLwZLVbcNuR9c6taoU8pNP/IlN14Y+7gt8
        lj6aQH5ijnE3FMzbx9T1ZltZAfJVeCfQ1n2gsuJBvphoBWqeQMECRDDjdpUgf/lCntrUFdq4LfDZ99HT
        C/ljtjmYR8EqDDBmrny+XT6zO4G93nUnYHMbqLx4kE/GO3F/sIKCpSg4c5vKke9sYXxeGpOjsw167qiy
        yDeLL7DBButxcGx7Lch/fifM2YRtzjqotXiQf1agYIcNFiVhz/baUIz8t0zh+eJrX+hQDJbh4IANVmZh
        2/ZaUZx8wdn/fx0VdaI4rEXCCRssT8Oa7bWjWNmdAAMrHhSLBVk4/78D9Cf5n0DyJ8HkL4PJD4SSHwon
        fzOU9u2wlelOiIA2kp8SS3tSFKRId1ocpEx+YSTtpTGQId3FUZAx7eVxUIN0H5AI1DDdR2RAjdN+SArU
        Id3H5AJ1TPdByUAO0n1UFuQk7YelAUeSNB+XzyKnab4wkUUB0n1lJlCgdF+ayqKgDJvj3iFg+99+bS6L
        Ekj3xcksSoak+V2m9ersVSjB9F6e7oYSb/Dr8yMjPwG7/CNKsC+66wAAAABJRU5ErkJggg==
</value>
  </data>
</root>